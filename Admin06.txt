教学环境介绍

真机：使用rht-vmctl辅助工具
• 控制教学用虚拟机
– 格式:rht-vmctl 控制指令 虚拟机名

– 常用控制指令: reset(还原)
]# rht-vmctl reset classroom  #先重置资源服务器
]# rht-vmctl reset server     #再重置练习虚拟机
]# rht-vmctl reset desktop    #再重置练习虚拟机
#########################################################
为lisi设置权限，使得lisi可以查看/etc/shadow文件内容，您有几种办法？
  1.利用其他人
      chmod  o+r /etc/shadow
  2.利用所属组
      chown :lisi  /etc/shadow
      chmod  g+r /etc/shadow
  3.利用所有者
      chown  lisi  /etc/shadow
      chmod  u+r /etc/shadow

########################################################
软件包管理

零散软件管理

一、具备软件包，从光盘中获得软件包

二、虚拟机classroom构建Web服务，提供RHEL7.0光盘所有内容
           Web服务：提供一个网站服务
           http协议：超文本传输协议
           https协议：安全的超文本传输协议
   利用真机火狐浏览器：
      http://classroom.example.com

  classroom.example.com/content/rhel7.0/x86_64/dvd/Packages/

三、下载软件包                                        
下载软件包
• 使用wget下载工具
– wget 软件包的URL网址
– wget 软件包的URL网址   -O(大写)  /目录路径/新文件名  #必须要写文件名

   vsftpd(实现FTP服务器软件)
[root@server0 ~]# wget  http://classroom.example.com/content/rhel7.0/x86_64/dvd/Packages/vsftpd-3.0.2-9.el7.x86_64.rpm
 
[root@server0 ~]# ls
 vsftpd-3.0.2-9.el7.x86_64.rpm
  软件名-软件版本.企业版Linux7系列.64位软件包.rpm

使用rpm命令管理软件
• RPM Package Manager,RPM包管理器
– rpm -q   软件名
– rpm -ivh 软件名-版本信息.rpm
– rpm -e   软件名
[root@server0 ~]# rpm -q firefox    #检测firefox软件是否安装 
firefox-24.5.0-1.el7.x86_64
[root@server0 ~]# rpm -q haha     #检测haha软件是否安装
[root@server0 ~]# rpm -q httpd    #检测httpd软件是否安装


[root@server0 ~]# rpm -q vsftpd   #检测vsftpd软件是否安装
未安装软件包 vsftpd 
[root@server0 ~]# rpm -ivh /root/vsftpd-3.0.2-9.el7.x86_64.rpm 

[root@server0 ~]# rpm -q vsftpd
vsftpd-3.0.2-9.el7.x86_64

[root@server0 ~]# rpm -e vsftpd  #卸载
[root@server0 ~]# rpm -q vsftpd

  daemon
   英 [ˈdiːmən] 美 [ˈdiːmən]
   n.
   (古希腊神话中的)半神半人精灵
[root@server0 ~]# rpm -qi vsftpd    #查询软件基本信息
[root@server0 ~]# rpm -ql vsftpd    #查看软件的安装清单

##########################################################
了解：导入红帽签名信息

[root@server0 ~]# wget http://classroom.example.com/content/rhel7.0/x86_64/dvd/RPM-GPG-KEY-redhat-release

[root@server0 ~]# rpm --import /root/RPM-GPG-KEY-redhat-release

##########################################################
常见装包的提示：
1.已经安装
[root@server0 ~]# rpm -ivh /root/vsftpd-3.0.2-9.el7.x86_64.rpm 
准备中...                                                      ################################# [100%]
	软件包 vsftpd-3.0.2-9.el7.x86_64 已经安装

2.依赖检测失败
]# rpm -ivh /root/bind-chroot-9.9.4-14.el7.x86_64.rpm 
错误：依赖检测失败：
	bind = 32:9.9.4-14.el7 被 bind-chroot-32:9.9.4-14.el7.x86_64 需要


#######################################################
Yum软件包仓库，自动解决依赖关系                  

服务：自动解决依赖关系，安装软件包

服务端：虚拟机classroom
            1.众多的软件包   2.仓库数据文件（软件包的描述信息）
            3.构建Web服务或FTP服务

    总结：构建Web服务或FTP服务，共享光盘所有内容
    
客户端：虚拟机server
           1.指定服务端位置
           2.客户端配置文件：/etc/yum.repos.d/*.repo
           3.有错误的文件，会影响正确的配置文件

[root@server0 ~]# rm -rf /etc/yum.repos.d/*
[root@server0 ~]# vim /etc/yum.repos.d/dvd.repo
[haha]                  #仓库名字
name=xixi hehe lele     #仓库描述信息
baseurl=http://classroom.example.com/content/rhel7.0/x86_64/dvd/                         #指定服务端网络路径
enabled=1                    #是否启用本文件
gpgcheck=0                   #是否检测红帽签名信息
[root@server0 ~]# yum  repolist    #列出识别的仓库信息 

#######################################################

客户端使用Yum安装软件包-----》/etc/yum.repos.d/*.repo---》baseurl=http://classroom.example.com/content/rhel7.0/x86_64/dvd/ ---》虚拟机classroom

Yum的使用：
1.安装软件
[root@server0 ~]# yum -y install httpd
[root@server0 ~]# rpm -q httpd

[root@server0 ~]# yum -y install gcc
[root@server0 ~]# yum -y install mariadb-server

[root@server0 ~]# yum -y install sssd
[root@server0 ~]# yum -y install system-config-kickstart 
[root@server0 ~]# yum -y install dhcp

2.卸载软件
[root@server0 ~]# yum  remove  httpd
[root@server0 ~]# yum  remove  gcc

3.清空Yum的缓存
[root@server0 ~]# yum clean all

[root@server0 ~]# yum repolist 
 
[root@server0 ~]# yum repolist 

[root@server0 ~]# yum -y install tftp-server

######################################################
分区规划及使用
硬盘分区管理

  扇区默认大小为512字节 

一块硬盘的“艺术”之旅
• 识别硬盘 => 分区规划 => 格式化 => 挂载使用             
    毛坯楼层 => 打隔断 => 装修 =>入驻

一、识别硬盘 
[root@server0 ~]# lsblk
 NAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
 vda    253:0    0  10G  0 disk 
 └─vda1 253:1    0  10G  0 part /
 vdb    253:16   0  10G  0 disk 
[root@server0 ~]# ls /dev/vdb

二、分区规划

       分区模式： MBR  GPT
    MBR：主启动记录的模式   最大空间支持 2.2TB
       分区类型：主分区    扩展分区    逻辑分区
       最多只能有4个主分区

       划分扩展分区，只能有一个，可以没有，扩展分区空间不能直接存储数据
       扩展分区不能格式化
       3个主分区，一个扩展分区，再扩展分区之上划分逻辑分区

• 修改硬盘的分区表
– fdisk 硬盘设备
[root@server0 ~]# fdisk /dev/vdb
  n 创建新的分区----->回车----->回车---->回车----->在last结束时 +2G
  p 查看分区表
  n 创建新的分区----->回车----->回车---->回车----->在last结束时 +1G
  d 删除分区
  w 保存并退出 

[root@server0 ~]# lsblk 
[root@server0 ~]# ls /dev/vdb[1-2]          


三、格式化:赋予空间文件系统的过程
      文件系统：空间存储数据的规则

  Windows： NTFS   FAT

  Linux： ext4(RHEL6)   xfs(RHEL7)

[root@server0 ~]# mkfs.ext4 /dev/vdb1   #格式化成ext4文件系统
[root@server0 ~]# blkid /dev/vdb1       #查看分区文件系统类型

[root@server0 ~]# mkfs.xfs /dev/vdb2  #格式化成xfs文件系统
[root@server0 ~]# blkid /dev/vdb2    #查看分区文件系统类型

四、挂载使用
[root@server0 ~]# mkdir /mypart1
[root@server0 ~]# mount /dev/vdb1 /mypart1/
[root@server0 ~]# df -h     #显示当前系统中，正在挂载使用的设备

[root@server0 ~]# mkdir /mypart2
[root@server0 ~]# mount /dev/vdb2  /mypart2
[root@server0 ~]# df -h

五、开机自动挂载文件/etc/fstab

– 设备路径     挂载点       文件系统类型       参数       备份标记      检测顺序
[root@server0 ~]# vim /etc/fstab 

/dev/vdb1   /mypart1   ext4   defaults   0  0
/dev/vdb2   /mypart2   xfs    defaults   0  0

[root@server0 ~]# umount /mypart1  #卸载挂载点，挂载的设备
[root@server0 ~]# umount /mypart2  #卸载挂载点，挂载的设备
[root@server0 ~]# df -h
[root@server0 ~]# mount -a
   检测/etc/fstab开机自动挂载配置文件,格式是否正确
   检测/etc/fstab中,书写完成,但当前没有挂载的设备,进行挂载
[root@server0 ~]# df -h    #查看正在挂载使用的设备

#####################################################
六、综合分区
[root@server0 ~]# fdisk /dev/vdb 
   p 查看分区表
   n 创建主分区----->回车----->回车---->回车----->在last结束时 +1G
   p 查看分区表
   n 创建扩展分区 
          ----->回车---->起始回车----->结束回车   将所有空间给扩展分区
   p 查看分区表
   n 创建逻辑分区----->起始回车------>结束+1G
   n 创建逻辑分区----->起始回车------>结束+1G
   n 创建逻辑分区----->起始回车------>结束+1G
   p 查看分区表
   w 保存并退出
[root@server0 ~]# partprobe   #手动刷新分区表
[root@server0 ~]# lsblk
########################################################











           






















































